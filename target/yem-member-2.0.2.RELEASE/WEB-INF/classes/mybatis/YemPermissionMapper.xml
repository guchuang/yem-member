<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yem.db.dao.YemPermissionMapper">
  <resultMap id="BaseResultMap" type="com.yem.entity.YemPermission">
    <id column="permission_id" jdbcType="VARCHAR" property="permissionId" />
    <result column="permission_code" jdbcType="BIGINT" property="permissionCode" />
    <result column="permission_name" jdbcType="VARCHAR" property="permissionName" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="zuul_prefix" jdbcType="VARCHAR" property="zuulPrefix" />
    <result column="server_prefix" jdbcType="VARCHAR" property="serverPrefix" />
    <result column="uri" jdbcType="VARCHAR" property="uri" />
    <result column="valid" jdbcType="BIT" property="valid" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_time" jdbcType="DATE" property="updateTime" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
  </resultMap>
  <sql id="Base_Column_List">
    permission_id, permission_code, permission_name, method, zuul_prefix, server_prefix, 
    uri, valid, create_time, create_by, update_time, update_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yem_permission
    where permission_id = #{permissionId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from yem_permission
    where permission_id = #{permissionId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yem.entity.YemPermission">
    insert into yem_permission (permission_id, permission_code, permission_name, 
      method, zuul_prefix, server_prefix, 
      uri, valid, create_time, create_by, 
      update_time, update_by)
    values (#{permissionId,jdbcType=VARCHAR}, #{permissionCode,jdbcType=BIGINT}, #{permissionName,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{zuulPrefix,jdbcType=VARCHAR}, #{serverPrefix,jdbcType=VARCHAR}, 
      #{uri,jdbcType=VARCHAR}, #{valid,jdbcType=BIT}, #{createTime,jdbcType=DATE}, #{createBy,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=DATE}, #{updateBy,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yem.entity.YemPermission">
    insert into yem_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="permissionCode != null">
        permission_code,
      </if>
      <if test="permissionName != null">
        permission_name,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="zuulPrefix != null">
        zuul_prefix,
      </if>
      <if test="serverPrefix != null">
        server_prefix,
      </if>
      <if test="uri != null">
        uri,
      </if>
      <if test="valid != null">
        valid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="permissionId != null">
        #{permissionId,jdbcType=VARCHAR},
      </if>
      <if test="permissionCode != null">
        #{permissionCode,jdbcType=BIGINT},
      </if>
      <if test="permissionName != null">
        #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="zuulPrefix != null">
        #{zuulPrefix,jdbcType=VARCHAR},
      </if>
      <if test="serverPrefix != null">
        #{serverPrefix,jdbcType=VARCHAR},
      </if>
      <if test="uri != null">
        #{uri,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yem.entity.YemPermission">
    update yem_permission
    <set>
      <if test="permissionCode != null">
        permission_code = #{permissionCode,jdbcType=BIGINT},
      </if>
      <if test="permissionName != null">
        permission_name = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="zuulPrefix != null">
        zuul_prefix = #{zuulPrefix,jdbcType=VARCHAR},
      </if>
      <if test="serverPrefix != null">
        server_prefix = #{serverPrefix,jdbcType=VARCHAR},
      </if>
      <if test="uri != null">
        uri = #{uri,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
    </set>
    where permission_id = #{permissionId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yem.entity.YemPermission">
    update yem_permission
    set permission_code = #{permissionCode,jdbcType=BIGINT},
      permission_name = #{permissionName,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      zuul_prefix = #{zuulPrefix,jdbcType=VARCHAR},
      server_prefix = #{serverPrefix,jdbcType=VARCHAR},
      uri = #{uri,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=BIT},
      create_time = #{createTime,jdbcType=DATE},
      create_by = #{createBy,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=DATE},
      update_by = #{updateBy,jdbcType=BIGINT}
    where permission_id = #{permissionId,jdbcType=VARCHAR}
  </update>
</mapper>